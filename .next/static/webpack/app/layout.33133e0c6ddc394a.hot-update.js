"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/layout",{

/***/ "(app-pages-browser)/./app/globals.css":
/*!*************************!*\
  !*** ./app/globals.css ***!
  \*************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (\"681dc0189829\");\nif (true) { module.hot.accept() }\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2FwcC9nbG9iYWxzLmNzcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUEsaUVBQWUsY0FBYztBQUM3QixJQUFJLElBQVUsSUFBSSxpQkFBaUIiLCJzb3VyY2VzIjpbIi9ob21lL3Byb2plY3QvYXBwL2dsb2JhbHMuY3NzIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IFwiNjgxZGMwMTg5ODI5XCJcbmlmIChtb2R1bGUuaG90KSB7IG1vZHVsZS5ob3QuYWNjZXB0KCkgfVxuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./app/globals.css\n"));

/***/ }),

/***/ "(app-pages-browser)/./lib/block-extensions.ts":
/*!*********************************!*\
  !*** ./lib/block-extensions.ts ***!
  \*********************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   blockCryptoExtensions: () => (/* binding */ blockCryptoExtensions)\n/* harmony export */ });\nfunction blockCryptoExtensions() {\n    // Ensure we're in browser environment\n    if (false) {}\n    try {\n        // More aggressive blocking of BinanceChain\n        Object.defineProperty(window, 'BinanceChain', {\n            get () {\n                return undefined;\n            },\n            set () {\n                return true;\n            },\n            configurable: true\n        });\n        // More aggressive blocking of Ethereum/MetaMask\n        Object.defineProperty(window, 'ethereum', {\n            get () {\n                return undefined;\n            },\n            set () {\n                return true;\n            },\n            configurable: true\n        });\n        // Block common crypto provider properties\n        const dummyProvider = {\n            isMetaMask: false,\n            isTrust: false,\n            type: null,\n            selectedAddress: null,\n            networkVersion: null,\n            chainId: null,\n            request: ()=>Promise.reject(new Error('Crypto extensions are blocked')),\n            send: ()=>Promise.reject(new Error('Crypto extensions are blocked')),\n            enable: ()=>Promise.reject(new Error('Crypto extensions are blocked')),\n            on: ()=>{},\n            removeListener: ()=>{},\n            removeAllListeners: ()=>{},\n            listeners: ()=>[]\n        };\n        // Intercept provider injection attempts\n        [\n            'ethereum',\n            'web3',\n            'BinanceChain'\n        ].forEach((prop)=>{\n            let value = dummyProvider;\n            Object.defineProperty(window, prop, {\n                get () {\n                    return value;\n                },\n                set (v) {\n                    // Allow setting to undefined/null but preserve our dummy for other values\n                    value = v === undefined || v === null ? v : dummyProvider;\n                    return true;\n                },\n                configurable: true\n            });\n        });\n        // Block extension script injection\n        const observer = new MutationObserver((mutations)=>{\n            mutations.forEach((mutation)=>{\n                mutation.addedNodes.forEach((node)=>{\n                    var _node_src, _node_src1, _node_src2, _node_src3, _node_id, _node_className;\n                    if (node instanceof HTMLElement && (node.nodeName === 'SCRIPT' || node.nodeName === 'IFRAME') && (((_node_src = node.src) === null || _node_src === void 0 ? void 0 : _node_src.includes('chrome-extension')) || ((_node_src1 = node.src) === null || _node_src1 === void 0 ? void 0 : _node_src1.includes('binance')) || ((_node_src2 = node.src) === null || _node_src2 === void 0 ? void 0 : _node_src2.includes('metamask')) || ((_node_src3 = node.src) === null || _node_src3 === void 0 ? void 0 : _node_src3.includes('wallet')) || ((_node_id = node.id) === null || _node_id === void 0 ? void 0 : _node_id.toLowerCase().includes('wallet')) || ((_node_className = node.className) === null || _node_className === void 0 ? void 0 : _node_className.toLowerCase().includes('wallet')))) {\n                        node.remove();\n                    }\n                });\n            });\n        });\n        // Start observing immediately with broader coverage\n        observer.observe(document.documentElement, {\n            childList: true,\n            subtree: true,\n            attributes: true,\n            attributeFilter: [\n                'src',\n                'id',\n                'class'\n            ]\n        });\n        // Clean up any existing injection attempts\n        document.querySelectorAll('script[src*=\"chrome-extension\"], script[src*=\"binance\"], script[src*=\"metamask\"], iframe[src*=\"chrome-extension\"]').forEach((node)=>node.remove());\n    } catch (error) {\n        console.warn('Failed to block crypto extensions:', error);\n    }\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2xpYi9ibG9jay1leHRlbnNpb25zLnRzIiwibWFwcGluZ3MiOiI7Ozs7QUFBTyxTQUFTQTtJQUNkLHNDQUFzQztJQUN0QyxJQUFJLEtBQTZCLEVBQUUsRUFBTztJQUUxQyxJQUFJO1FBQ0YsMkNBQTJDO1FBQzNDQyxPQUFPQyxjQUFjLENBQUNDLFFBQVEsZ0JBQWdCO1lBQzVDQztnQkFBUSxPQUFPQztZQUFXO1lBQzFCQztnQkFBUSxPQUFPO1lBQU07WUFDckJDLGNBQWM7UUFDaEI7UUFFQSxnREFBZ0Q7UUFDaEROLE9BQU9DLGNBQWMsQ0FBQ0MsUUFBUSxZQUFZO1lBQ3hDQztnQkFBUSxPQUFPQztZQUFXO1lBQzFCQztnQkFBUSxPQUFPO1lBQU07WUFDckJDLGNBQWM7UUFDaEI7UUFFQSwwQ0FBMEM7UUFDMUMsTUFBTUMsZ0JBQWdCO1lBQ3BCQyxZQUFZO1lBQ1pDLFNBQVM7WUFDVEMsTUFBTTtZQUNOQyxpQkFBaUI7WUFDakJDLGdCQUFnQjtZQUNoQkMsU0FBUztZQUNUQyxTQUFTLElBQU1DLFFBQVFDLE1BQU0sQ0FBQyxJQUFJQyxNQUFNO1lBQ3hDQyxNQUFNLElBQU1ILFFBQVFDLE1BQU0sQ0FBQyxJQUFJQyxNQUFNO1lBQ3JDRSxRQUFRLElBQU1KLFFBQVFDLE1BQU0sQ0FBQyxJQUFJQyxNQUFNO1lBQ3ZDRyxJQUFJLEtBQU87WUFDWEMsZ0JBQWdCLEtBQU87WUFDdkJDLG9CQUFvQixLQUFPO1lBQzNCQyxXQUFXLElBQU0sRUFBRTtRQUNyQjtRQUVBLHdDQUF3QztRQUN4QztZQUFDO1lBQVk7WUFBUTtTQUFlLENBQUNDLE9BQU8sQ0FBQ0MsQ0FBQUE7WUFDM0MsSUFBSUMsUUFBUW5CO1lBQ1pQLE9BQU9DLGNBQWMsQ0FBQ0MsUUFBUXVCLE1BQU07Z0JBQ2xDdEI7b0JBQVEsT0FBT3VCO2dCQUFPO2dCQUN0QnJCLEtBQUlzQixDQUFDO29CQUNILDBFQUEwRTtvQkFDMUVELFFBQVFDLE1BQU12QixhQUFhdUIsTUFBTSxPQUFPQSxJQUFJcEI7b0JBQzVDLE9BQU87Z0JBQ1Q7Z0JBQ0FELGNBQWM7WUFDaEI7UUFDRjtRQUVBLG1DQUFtQztRQUNuQyxNQUFNc0IsV0FBVyxJQUFJQyxpQkFBaUIsQ0FBQ0M7WUFDckNBLFVBQVVOLE9BQU8sQ0FBQyxDQUFDTztnQkFDakJBLFNBQVNDLFVBQVUsQ0FBQ1IsT0FBTyxDQUFDLENBQUNTO3dCQUt2QkEsV0FDQUEsWUFDQUEsWUFDQUEsWUFDQUEsVUFDQUE7b0JBVEosSUFDRUEsZ0JBQWdCQyxlQUNmRCxDQUFBQSxLQUFLRSxRQUFRLEtBQUssWUFBWUYsS0FBS0UsUUFBUSxLQUFLLFFBQU8sS0FFdERGLENBQUFBLEVBQUFBLFlBQUFBLEtBQUtHLEdBQUcsY0FBUkgsZ0NBQUFBLFVBQVVJLFFBQVEsQ0FBQywwQkFDbkJKLGFBQUFBLEtBQUtHLEdBQUcsY0FBUkgsaUNBQUFBLFdBQVVJLFFBQVEsQ0FBQyxpQkFDbkJKLGFBQUFBLEtBQUtHLEdBQUcsY0FBUkgsaUNBQUFBLFdBQVVJLFFBQVEsQ0FBQyxrQkFDbkJKLGFBQUFBLEtBQUtHLEdBQUcsY0FBUkgsaUNBQUFBLFdBQVVJLFFBQVEsQ0FBQyxnQkFDbkJKLFdBQUFBLEtBQUtLLEVBQUUsY0FBUEwsK0JBQUFBLFNBQVNNLFdBQVcsR0FBR0YsUUFBUSxDQUFDLGdCQUNoQ0osa0JBQUFBLEtBQUtPLFNBQVMsY0FBZFAsc0NBQUFBLGdCQUFnQk0sV0FBVyxHQUFHRixRQUFRLENBQUMsVUFBUSxHQUVqRDt3QkFDQUosS0FBS1EsTUFBTTtvQkFDYjtnQkFDRjtZQUNGO1FBQ0Y7UUFFQSxvREFBb0Q7UUFDcERiLFNBQVNjLE9BQU8sQ0FBQ0MsU0FBU0MsZUFBZSxFQUFFO1lBQ3pDQyxXQUFXO1lBQ1hDLFNBQVM7WUFDVEMsWUFBWTtZQUNaQyxpQkFBaUI7Z0JBQUM7Z0JBQU87Z0JBQU07YUFBUTtRQUN6QztRQUVBLDJDQUEyQztRQUMzQ0wsU0FBU00sZ0JBQWdCLENBQUMscUhBQ3ZCekIsT0FBTyxDQUFDUyxDQUFBQSxPQUFRQSxLQUFLUSxNQUFNO0lBRWhDLEVBQUUsT0FBT1MsT0FBTztRQUNkQyxRQUFRQyxJQUFJLENBQUMsc0NBQXNDRjtJQUNyRDtBQUNGIiwic291cmNlcyI6WyIvaG9tZS9wcm9qZWN0L2xpYi9ibG9jay1leHRlbnNpb25zLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBmdW5jdGlvbiBibG9ja0NyeXB0b0V4dGVuc2lvbnMoKSB7XG4gIC8vIEVuc3VyZSB3ZSdyZSBpbiBicm93c2VyIGVudmlyb25tZW50XG4gIGlmICh0eXBlb2Ygd2luZG93ID09PSAndW5kZWZpbmVkJykgcmV0dXJuO1xuXG4gIHRyeSB7XG4gICAgLy8gTW9yZSBhZ2dyZXNzaXZlIGJsb2NraW5nIG9mIEJpbmFuY2VDaGFpblxuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh3aW5kb3csICdCaW5hbmNlQ2hhaW4nLCB7XG4gICAgICBnZXQoKSB7IHJldHVybiB1bmRlZmluZWQ7IH0sXG4gICAgICBzZXQoKSB7IHJldHVybiB0cnVlOyB9LFxuICAgICAgY29uZmlndXJhYmxlOiB0cnVlXG4gICAgfSk7XG5cbiAgICAvLyBNb3JlIGFnZ3Jlc3NpdmUgYmxvY2tpbmcgb2YgRXRoZXJldW0vTWV0YU1hc2tcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkod2luZG93LCAnZXRoZXJldW0nLCB7XG4gICAgICBnZXQoKSB7IHJldHVybiB1bmRlZmluZWQ7IH0sXG4gICAgICBzZXQoKSB7IHJldHVybiB0cnVlOyB9LFxuICAgICAgY29uZmlndXJhYmxlOiB0cnVlXG4gICAgfSk7XG5cbiAgICAvLyBCbG9jayBjb21tb24gY3J5cHRvIHByb3ZpZGVyIHByb3BlcnRpZXNcbiAgICBjb25zdCBkdW1teVByb3ZpZGVyID0ge1xuICAgICAgaXNNZXRhTWFzazogZmFsc2UsXG4gICAgICBpc1RydXN0OiBmYWxzZSxcbiAgICAgIHR5cGU6IG51bGwsXG4gICAgICBzZWxlY3RlZEFkZHJlc3M6IG51bGwsXG4gICAgICBuZXR3b3JrVmVyc2lvbjogbnVsbCxcbiAgICAgIGNoYWluSWQ6IG51bGwsXG4gICAgICByZXF1ZXN0OiAoKSA9PiBQcm9taXNlLnJlamVjdChuZXcgRXJyb3IoJ0NyeXB0byBleHRlbnNpb25zIGFyZSBibG9ja2VkJykpLFxuICAgICAgc2VuZDogKCkgPT4gUHJvbWlzZS5yZWplY3QobmV3IEVycm9yKCdDcnlwdG8gZXh0ZW5zaW9ucyBhcmUgYmxvY2tlZCcpKSxcbiAgICAgIGVuYWJsZTogKCkgPT4gUHJvbWlzZS5yZWplY3QobmV3IEVycm9yKCdDcnlwdG8gZXh0ZW5zaW9ucyBhcmUgYmxvY2tlZCcpKSxcbiAgICAgIG9uOiAoKSA9PiB7fSxcbiAgICAgIHJlbW92ZUxpc3RlbmVyOiAoKSA9PiB7fSxcbiAgICAgIHJlbW92ZUFsbExpc3RlbmVyczogKCkgPT4ge30sXG4gICAgICBsaXN0ZW5lcnM6ICgpID0+IFtdXG4gICAgfTtcblxuICAgIC8vIEludGVyY2VwdCBwcm92aWRlciBpbmplY3Rpb24gYXR0ZW1wdHNcbiAgICBbJ2V0aGVyZXVtJywgJ3dlYjMnLCAnQmluYW5jZUNoYWluJ10uZm9yRWFjaChwcm9wID0+IHtcbiAgICAgIGxldCB2YWx1ZSA9IGR1bW15UHJvdmlkZXI7XG4gICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkod2luZG93LCBwcm9wLCB7XG4gICAgICAgIGdldCgpIHsgcmV0dXJuIHZhbHVlOyB9LFxuICAgICAgICBzZXQodikgeyBcbiAgICAgICAgICAvLyBBbGxvdyBzZXR0aW5nIHRvIHVuZGVmaW5lZC9udWxsIGJ1dCBwcmVzZXJ2ZSBvdXIgZHVtbXkgZm9yIG90aGVyIHZhbHVlc1xuICAgICAgICAgIHZhbHVlID0gdiA9PT0gdW5kZWZpbmVkIHx8IHYgPT09IG51bGwgPyB2IDogZHVtbXlQcm92aWRlcjtcbiAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgfSxcbiAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlXG4gICAgICB9KTtcbiAgICB9KTtcblxuICAgIC8vIEJsb2NrIGV4dGVuc2lvbiBzY3JpcHQgaW5qZWN0aW9uXG4gICAgY29uc3Qgb2JzZXJ2ZXIgPSBuZXcgTXV0YXRpb25PYnNlcnZlcigobXV0YXRpb25zKSA9PiB7XG4gICAgICBtdXRhdGlvbnMuZm9yRWFjaCgobXV0YXRpb24pID0+IHtcbiAgICAgICAgbXV0YXRpb24uYWRkZWROb2Rlcy5mb3JFYWNoKChub2RlKSA9PiB7XG4gICAgICAgICAgaWYgKFxuICAgICAgICAgICAgbm9kZSBpbnN0YW5jZW9mIEhUTUxFbGVtZW50ICYmXG4gICAgICAgICAgICAobm9kZS5ub2RlTmFtZSA9PT0gJ1NDUklQVCcgfHwgbm9kZS5ub2RlTmFtZSA9PT0gJ0lGUkFNRScpICYmXG4gICAgICAgICAgICAoXG4gICAgICAgICAgICAgIG5vZGUuc3JjPy5pbmNsdWRlcygnY2hyb21lLWV4dGVuc2lvbicpIHx8IFxuICAgICAgICAgICAgICBub2RlLnNyYz8uaW5jbHVkZXMoJ2JpbmFuY2UnKSB8fCBcbiAgICAgICAgICAgICAgbm9kZS5zcmM/LmluY2x1ZGVzKCdtZXRhbWFzaycpIHx8XG4gICAgICAgICAgICAgIG5vZGUuc3JjPy5pbmNsdWRlcygnd2FsbGV0JykgfHxcbiAgICAgICAgICAgICAgbm9kZS5pZD8udG9Mb3dlckNhc2UoKS5pbmNsdWRlcygnd2FsbGV0JykgfHxcbiAgICAgICAgICAgICAgbm9kZS5jbGFzc05hbWU/LnRvTG93ZXJDYXNlKCkuaW5jbHVkZXMoJ3dhbGxldCcpXG4gICAgICAgICAgICApXG4gICAgICAgICAgKSB7XG4gICAgICAgICAgICBub2RlLnJlbW92ZSgpO1xuICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgICB9KTtcbiAgICB9KTtcblxuICAgIC8vIFN0YXJ0IG9ic2VydmluZyBpbW1lZGlhdGVseSB3aXRoIGJyb2FkZXIgY292ZXJhZ2VcbiAgICBvYnNlcnZlci5vYnNlcnZlKGRvY3VtZW50LmRvY3VtZW50RWxlbWVudCwge1xuICAgICAgY2hpbGRMaXN0OiB0cnVlLFxuICAgICAgc3VidHJlZTogdHJ1ZSxcbiAgICAgIGF0dHJpYnV0ZXM6IHRydWUsXG4gICAgICBhdHRyaWJ1dGVGaWx0ZXI6IFsnc3JjJywgJ2lkJywgJ2NsYXNzJ11cbiAgICB9KTtcblxuICAgIC8vIENsZWFuIHVwIGFueSBleGlzdGluZyBpbmplY3Rpb24gYXR0ZW1wdHNcbiAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCdzY3JpcHRbc3JjKj1cImNocm9tZS1leHRlbnNpb25cIl0sIHNjcmlwdFtzcmMqPVwiYmluYW5jZVwiXSwgc2NyaXB0W3NyYyo9XCJtZXRhbWFza1wiXSwgaWZyYW1lW3NyYyo9XCJjaHJvbWUtZXh0ZW5zaW9uXCJdJylcbiAgICAgIC5mb3JFYWNoKG5vZGUgPT4gbm9kZS5yZW1vdmUoKSk7XG5cbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICBjb25zb2xlLndhcm4oJ0ZhaWxlZCB0byBibG9jayBjcnlwdG8gZXh0ZW5zaW9uczonLCBlcnJvcik7XG4gIH1cbn0iXSwibmFtZXMiOlsiYmxvY2tDcnlwdG9FeHRlbnNpb25zIiwiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJ3aW5kb3ciLCJnZXQiLCJ1bmRlZmluZWQiLCJzZXQiLCJjb25maWd1cmFibGUiLCJkdW1teVByb3ZpZGVyIiwiaXNNZXRhTWFzayIsImlzVHJ1c3QiLCJ0eXBlIiwic2VsZWN0ZWRBZGRyZXNzIiwibmV0d29ya1ZlcnNpb24iLCJjaGFpbklkIiwicmVxdWVzdCIsIlByb21pc2UiLCJyZWplY3QiLCJFcnJvciIsInNlbmQiLCJlbmFibGUiLCJvbiIsInJlbW92ZUxpc3RlbmVyIiwicmVtb3ZlQWxsTGlzdGVuZXJzIiwibGlzdGVuZXJzIiwiZm9yRWFjaCIsInByb3AiLCJ2YWx1ZSIsInYiLCJvYnNlcnZlciIsIk11dGF0aW9uT2JzZXJ2ZXIiLCJtdXRhdGlvbnMiLCJtdXRhdGlvbiIsImFkZGVkTm9kZXMiLCJub2RlIiwiSFRNTEVsZW1lbnQiLCJub2RlTmFtZSIsInNyYyIsImluY2x1ZGVzIiwiaWQiLCJ0b0xvd2VyQ2FzZSIsImNsYXNzTmFtZSIsInJlbW92ZSIsIm9ic2VydmUiLCJkb2N1bWVudCIsImRvY3VtZW50RWxlbWVudCIsImNoaWxkTGlzdCIsInN1YnRyZWUiLCJhdHRyaWJ1dGVzIiwiYXR0cmlidXRlRmlsdGVyIiwicXVlcnlTZWxlY3RvckFsbCIsImVycm9yIiwiY29uc29sZSIsIndhcm4iXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./lib/block-extensions.ts\n"));

/***/ })

});